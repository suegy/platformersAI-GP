7
hexbinplot(similarity~distance, data=ctable[ctable$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,100),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,150),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,150),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <2000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,150),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <4000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,150),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <4000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,250),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,250),aspect=1)
ggplot(ctable[ctable$generation <50],aes(x=distance,y=fitness))
ggplot(ctable[ctable$generation <50],aes(x=distance,y=fitness)) + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-10,300), ylim =c(-10,350))
ggplot(ctable[ctable$generation <50]) + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-10,300), ylim =c(-10,350))
ggplot2(ctable[ctable$generation <50],aes(x=distance,y=fitness)) + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-10,300), ylim =c(-10,350))
hexbinplot(fitness~distance, data=ctable[ctable$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,250),aspect=1)
ggplot(ctable[ctable$generation <50],aes(x=distance,y=fitness)) + geom_hex() + xlab("Distance") + ylab("Fitness") + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-10,300), ylim =c(-10,350))
ggplot(ctable[ctable$generation <2500],aes(x=distance,y=fitness)) + geom_hex() + xlab("Distance") + ylab("Fitness") + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-10,300), ylim =c(-10,350))
ggplot(ctable[ctable$generation <2500],aes(x=distance,y=fitness)) + geom_smooth() + xlab("Distance") + ylab("Fitness") + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-10,300), ylim =c(-10,350))
ggplot(ctable[ctable$generation <2500],aes(x=distance,y=fitness)) + geom_smooth() + xlab("Distance") + ylab("Fitness") + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-0,300), ylim =c(0,350))
ggplot(ctable[ctable$generation <2500],aes(x=distance,y=fitness)) + geom_point() + xlab("Distance") + ylab("Fitness") + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-0,300), ylim =c(0,350))
ggplot(ctable[ctable$generation <2500],aes(x=distance,y=fitness)) + geom_point()
ggplot(ctable[ctable$generation <2500],aes(x=distance,y=fitness)) + geom_smooth()
ggplot(ctable[ctable$generation <4500],aes(x=distance,y=fitness)) + geom_smooth()
ggplot(ctable[ctable$generation <100],aes(x=distance,y=fitness)) + geom_smooth()
ggplot(ctable[ctable$generation <50],aes(x=distance,y=fitness)) + geom_smooth()
ggplot(ctable[ctable$generation <10],aes(x=distance,y=fitness)) + geom_smooth()
ggplot(ctable[ctable$generation <50],aes(x=distance,y=fitness)) + geom_smooth()
ggplot(ctable[ctable$distance > 200],aes(x=distance,y=generation)) + geom_smooth()
ggplot(ctable[ctable$distance > 200],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$distance > 200][ctable$generation < 3000],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$generation < 3000][ctable$distance > 200][ctable$generation < 3000],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$distance > 200][ctable$generation < 3000],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$distance > 200][ctable$generation < 1000],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$distance > 200][ctable$generation < 100],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$generation < 100][ctable$distance > 200],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$generation < 100],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$generation < 1000],aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable[ctable$generation <50],aes(x=distance,y=fitness)) + geom_smooth()
ggplot(ctable[ctable$generation < 1000],aes(y=fitness,x=generation)) + geom_smooth()
ggplot(ctable[ctable$generation < 2000],aes(y=fitness,x=generation)) + geom_smooth()
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=generation)) + geom_smooth()
ggplot(ctable,aes(y=fitness,x=generation)) + geom_smooth()
save.image("D:/Projects/platformerAI/dataset/GECCO-data/workingset-gama.RData")
ggplot(ctable,aes(y=fitness,x=generation)) + geom_smooth()
library(splitstackshape)
library(dplyr)
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("RColorBrewer")) {
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
}
ggplot(ctable,aes(y=fitness,x=generation)) + geom_smooth()
library(ggplots2)
library(ggplots)
library(ggplot2)
ggplot(ctable,aes(y=fitness,x=generation)) + geom_smooth()
ggplot(ctable,aes(y=similarity,x=generation)) + geom_smooth()
ggplot(ctable,aes(y=distance,x=generation)) + geom_smooth()
ggplot(ctable,aes(y=distance,x=generation)) + geom_smooth() + ggplot(ctable,aes(y=fitness,x=generation))
ggplot(ctable,aes(y=similarity,x=generation),fill=red) + geom_smooth()
ggplot(ctable,aes(y=similarity,x=generation),fill="red",colour="green") + geom_smooth()
ggplot(ctable,aes(y=similarity,x=generation)) + geom_smooth(fill="red",colour="green")
genplot <- ggplot(ctable,aes(y=similarity,x=generation)) + geom_smooth(colour="blue")
genplot
genplot + geom_smooth(ctable,aes(y=fitness,x=generation),color="red")
library(multiplot)
install.packages("multiplot")
install.packages(c("gridExtra", "ggplot2"))
multiplot(genplot)
library(gridExtra)
grid arrange(genplot,genplot,genplot,ncol=2)
grid.arrange(genplot,genplot,genplot,ncol=2)
ggplot(ctable[ctable$generation < 1000],aes(y=similarity,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 1000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 2000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 4000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 5000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 6000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 100],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 10],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
ggplot(ctable[ctable$generation < 50],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
fitgenplot100 <- ggplot(ctable[ctable$generation < 100],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
fitgenplot1000 <- ggplot(ctable[ctable$generation < 1000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
fitgenplot2000 <- ggplot(ctable[ctable$generation < 2000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
fitgenplot4000 <- ggplot(ctable[ctable$generation < 4000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
fitgenplot6000 <- ggplot(ctable[ctable$generation < 6000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue")
grid.arrange(fitgenplot100,fitgenplot1000,fitgenplot2000,fitgenplot4000,fitgenplot6000,ncol=2)
fitgenplot100 <- ggplot(ctable[ctable$generation < 100],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +geom_tile("Gamalyzer evolution after 100 generations")
fitgenplot100
fitgenplot100 <- ggplot(ctable[ctable$generation < 100],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtile("Gamalyzer evolution after 100 generations")
fitgenplot100 <- ggplot(ctable[ctable$generation < 100],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("Gamalyzer evolution after 100 generations")
fitgenplot100
fitgenplot100 <- ggplot(ctable[ctable$generation < 100],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("100 generations")
fitgenplot1000 <- ggplot(ctable[ctable$generation < 1000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("1000 generations")
fitgenplot2000 <- ggplot(ctable[ctable$generation < 2000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
fitgenplot4000 <- ggplot(ctable[ctable$generation < 4000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("4000 generations")
fitgenplot6000 <- ggplot(ctable[ctable$generation < 6000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("6000 generations")
grid.arrange(fitgenplot100,fitgenplot1000,fitgenplot2000,fitgenplot4000,fitgenplot6000,ncol=2)
fitgenplot5000 <- ggplot(ctable[ctable$generation < 5000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("5000 generations")
grid.arrange(fitgenplot100,fitgenplot1000,fitgenplot2000,fitgenplot5000,fitgenplot6000,ncol=2)
fitgenplot7000 <- ggplot(ctable[ctable$generation < 7000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("7000 generations")
grid.arrange(fitgenplot100,fitgenplot1000,fitgenplot2000,fitgenplot5000,fitgenplot6000,fitgenplot7000,ncol=3)
ggplot(ctable[ctable$generation <50],aes(x=distance,y=fitness)) + geom_hex() + xlab("Distance") + ylab("Fitness") + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-10,300), ylim =c(-10,350))
hexbinplot(fitness~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-5,20))
ctablemult <- ctable
sol.gamalyzer.cpf25.sw4..lvl0.diff0.s1.player2.add_distance <- read.table("D:/Projects/platformerAI/dataset/sol-gamalyzer-cpf25-sw4--lvl0-diff0-s1-player2-add_distance.dat", sep=";", quote="\"")
View(sol.gamalyzer.cpf25.sw4..lvl0.diff0.s1.player2.add_distance)
sol.gamalyzer.cpf25.sw4..lvl0.diff0.s1.player4.add_distance <- read.table("D:/Projects/platformerAI/dataset/sol-gamalyzer-cpf25-sw4--lvl0-diff0-s1-player4-add_distance.dat", sep=";", quote="\"")
View(sol.gamalyzer.cpf25.sw4..lvl0.diff0.s1.player4.add_distance)
ctable_cpf12_sw10_gen7410_s1p2_mult <- ctable
rm (ctablemult,gamalyzer,temp,ag,agentdist,agentfit,agentsim)
rm(cn,colNums,col_breaks)
rm(gen,i,j,lvlcol,myCols)
rm(on,nn)
save.image("D:/Projects/platformerAI/dataset/GECCO-data/workingset-gamamult-s1p2-7410.RData")
gamalyzer <- sol.gamalyzer.cpf25.sw4..lvl0.diff0.s1.player2.add_distance
gamalyzer$V101 <- NULL
gamalyzer <- do.call(data.frame,lapply(gamalyzer, function(x) replace(x, is.infinite(x),0.0)))
gamalyzer$V101 <- NULL
gamalyzer <- do.call(data.frame,lapply(gamalyzer, function(x) replace(x, is.infinite(x),0.0)))
for (i in seq(1,100,1)){
on <- paste0("V",i)
nn <- paste0("Agent_",i)
setnames(gamalyzer, old = on, new = nn )
gamalyzer <- cSplit(gamalyzer, c(nn), c(":"))
setnames(gamalyzer, old = paste0("Agent_",i,"_",1), new = paste0("Agent_",i,"_fitness"))
setnames(gamalyzer, old = paste0("Agent_",i,"_",2), new = paste0("Agent_",i,"_similarity"))
setnames(gamalyzer, old = paste0("Agent_",i,"_",3), new = paste0("Agent_",i,"_distance"))
}
c <- data.frame(fitness=numeric(0),similarity=numeric(0),distance=numeric(0),generation=numeric(0),level=numeric(0))
ctable <- data.table(c)
gen = c(seq(1,nrow(gamalyzer),1))
gamalyzer <- cbind(gamalyzer,gen)
for (ag in seq(1,100,1)){
print(ag)
agentfit <- paste0("Agent_",ag,"_fitness")
agentdist <- paste0("Agent_",ag,"_distance")
agentsim <- paste0("Agent_",ag,"_similarity")
myCols <- c(agentfit,agentsim,agentdist,"gen")
colNums <- match(myCols,names(gamalyzer))
temp <- gamalyzer %>% select(colNums)
lvlcol <- rep(0,nrow(temp))
temp <- cbind(temp,lvlcol)
ctable <- rbindlist(list(ctable,temp))
}
ctable$similarity[is.infinite(ctable$similarity )] = 0.0
ggplot(ctable[ctable$generation < 2000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 1500],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
View(ctable)
ggplot(ctable[ctable$distance > 250],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$distance > 250],aes(y=fitness,x=generation)) +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 1500],aes(y=fitness,x=generation)) + geom_abline(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 1500],aes(y=fitness,x=generation)) + geom_hline(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 1500],aes(y=fitness,x=generation)) + geom_hex(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$distance > 250],aes(y=fitness,x=generation)) + geom_smooth(colour="blue", stat="identity") +ggtitle("2000 generations")
ggplot(ctable[ctable$distance > 250],aes(y=fitness,x=generation)) + geom_smooth(colour="blue", stat="max") +ggtitle("2000 generations")
ggplot(ctable[ctable$distance > 250],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +geom_point() +ggtitle("2000 generations")
ggplot(ctable[ctable$distance > 2500],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +geom_point() +ggtitle("2000 generations")
ggplot(ctable[ctable$generation > 2500],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +geom_point() +ggtitle("2000 generations")
ggplot(ctable[ctable$generation > 2500],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation > 3000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=generation)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=distance)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ctable.s1.player2.add_distance <-ctable
plots1p2-gama <- ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=distance)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
plots1p2_gama <- ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=distance)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
save.image("D:/Projects/platformerAI/dataset/GECCO-data/workingset-gamamultadd.RData")
View(gamalyzer.cpf12.sw10.gen7410)
library(splitstackshape)
library(dplyr)
library(ggplot2)
library(gridExtra)
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("RColorBrewer")) {
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
}
gamalyzer <- sol.gamalyzer.cpf25.sw4..lvl0.diff0.s1.player4.add_distance
gamalyzer$V101 <- NULL
gamalyzer <- do.call(data.frame,lapply(gamalyzer, function(x) replace(x, is.infinite(x),0.0)))
for (i in seq(1,100,1)){
on <- paste0("V",i)
nn <- paste0("Agent_",i)
setnames(gamalyzer, old = on, new = nn )
gamalyzer <- cSplit(gamalyzer, c(nn), c(":"))
setnames(gamalyzer, old = paste0("Agent_",i,"_",1), new = paste0("Agent_",i,"_fitness"))
setnames(gamalyzer, old = paste0("Agent_",i,"_",2), new = paste0("Agent_",i,"_similarity"))
setnames(gamalyzer, old = paste0("Agent_",i,"_",3), new = paste0("Agent_",i,"_distance"))
}
c <- data.frame(fitness=numeric(0),similarity=numeric(0),distance=numeric(0),generation=numeric(0),level=numeric(0))
ctable <- data.table(c)
gen = c(seq(1,nrow(gamalyzer),1))
gamalyzer <- cbind(gamalyzer,gen)
for (ag in seq(1,100,1)){
print(ag)
agentfit <- paste0("Agent_",ag,"_fitness")
agentdist <- paste0("Agent_",ag,"_distance")
agentsim <- paste0("Agent_",ag,"_similarity")
myCols <- c(agentfit,agentsim,agentdist,"gen")
colNums <- match(myCols,names(gamalyzer))
temp <- gamalyzer %>% select(colNums)
lvlcol <- rep(0,nrow(temp))
temp <- cbind(temp,lvlcol)
ctable <- rbindlist(list(ctable,temp))
}
ctable$similarity[is.infinite(ctable$similarity )] = 0.0
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=distance)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=similarity,x=distance)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=similarity,x=distance)) +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=distance)) + geom_smooth(stat = "none",colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=distance)) + geom_smooth(stat = "gam",colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=fitness,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 3000],aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable,aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable$generation < 2000],aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable.s1.player2.add_distance$generation < 2000],aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 2000],aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 3000],aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 5000],aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 7000],aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 7000],aes(y=fitness,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 7000],aes(y=fitness,x=similarity)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 7000],aes(y=similarity,x=fitness)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 7000],aes(y=similarity,x=fitness)) + ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 7000],aes(y=similarity,x=distance)) + stat_smooth(colour="blue") +ggtitle("2000 generations")
ggplot(ctable[ctable_cpf12_sw10_gen7410_s1p2_mult$generation < 5000],aes(y=similarity,x=distance)) + geom_smooth(colour="blue") +ggtitle("2000 generations")
hexbinplot(distance~fitness, data=ctable[ctable$generation <50], colramp=rf, trans=log, inv=exp, xlim =c(-10,300), ylim =c(-10,350))
library(hexbin)
hexbinplot(distance~fitness, data=ctable[ctable$generation <50], colramp=rf, trans=log, inv=exp, xlim =c(-10,300), ylim =c(-10,350))
fitness~distance
hexbinplot(fitness~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-5,20))
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-5,20))
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-0.5,1))
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-0.5,1), aspect=1)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-0.5,1), aspect=1)
hex.s1p4.adddist.gen50 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-0.5,1), aspect=1)
hex.s1p4.adddist.gen50
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-0.5,1.5), aspect=1)
5
hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-50,20), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,150), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,250), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,200), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,200), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,200), ylim =c(-0.5,1.5), aspect=1)
hex.s1p4.adddist.gen50 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,200), ylim =c(-0.5,1.5), aspect=1)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <200][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <200][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,250), ylim =c(-0.5,1.5), aspect=1)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,200), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,250), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,270), ylim =c(-0.5,1.5), aspect=1)
hex.s1p4.adddist.gen100 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,270), ylim =c(-0.5,1.5), aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, title="blabla")
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla")
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5),main= "10 generations", aspect=1)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5),main= "10 Generations", aspect=1)
hex.s1p4.adddist.gen100 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,270), ylim =c(-0.5,1.5), main="100 Generations",aspect=1)
hex.s1p4.adddist.gen50 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,200), ylim =c(-0.5,1.5), main="50 Generations", aspect=1)
grid.arrange(ncol = 3, hex.s1p4.adddist.gen10,hex.s1p4.adddist.gen50, hex.s1p4.adddist.gen100)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla",legend =FALSE)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla",legend =0)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla")
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla",legend=0)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla",legend=NULL)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla",legend.width = 0)
hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla",colorkey = FALSE)
hex.s1p4.adddist.gen10 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5),main= "10 Generations", aspect=1,colorkey = FALSE)
hex.s1p4.adddist.gen100 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,270), ylim =c(-0.5,1.5), main="100 Generations",aspect=1,colorkey = FALSE)
hex.s1p4.adddist.gen50 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,200), ylim =c(-0.5,1.5), main="50 Generations", aspect=1,colorkey = FALSE)
grid.arrange(ncol = 3, hex.s1p4.adddist.gen10,hex.s1p4.adddist.gen50, hex.s1p4.adddist.gen100)
hexbinplot(similarity~generation, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla")
hexbinplot(similarity~generation, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,10), ylim =c(-0.5,1.5), aspect=1, main="blabla")
hexbinplot(similarity~generation, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,10), ylim =c(-0.5,1.5), aspect=1, main="blabla")
hexbinplot(similarity~generation, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,50), ylim =c(-0.5,1.5), aspect=1, main="blabla")
hexbinplot(similarity~generation, data=ctable[ctable$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,150), ylim =c(-0.5,1.5), aspect=1, main="blabla")
ggplot(ctable[ctable$generation <50],aes(x=generation,y=similarity)) + geom_smooth()
ggplot(ctable[ctable$generation <2250],aes(x=generation,y=similarity)) + geom_smooth()
ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2250],aes(x=generation,y=similarity)) + geom_smooth()
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth()
ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2250],aes(x=generation,y=similarity)) + geom_smooth()
ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth()
ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth(colour= "blue") + geom_smooth(ctable[ctable$generation <2000],aes(x=generation,y=similarity), colour="red")
ggplot(rbindfillctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth(colour= "blue") + geom_smooth(ctable[ctable$generation <2000],aes(x=generation,y=similarity), colour="red")
simgens1p2 <- ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() +geom_tile("Training on Player A")
ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() +geom_tile("Training on Player A")
ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth(
)
ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player A")
simgens1p2 <- ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player A")
simgens1p4 <- ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B")
grid.arrange(ncols = 2, simgens1p2, simgens1p4)
grid.arrange(ncol = 2, simgens1p2, simgens1p4)
save.image("D:/Projects/platformerAI/dataset/GECCO-data/workingset-gamamultadd.RData")
load("D:/Projects/platformerAI/dataset/GECCO-data/workingset.RData")
library(splitstackshape)
library(dplyr)
library(gplots)
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("RColorBrewer")) {
install.packages("RColorBrewer", dependencies = TRUE)
library(RColorBrewer)
}
View(sol.baseline.gen3210)
View(ctable)
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=fitness)) + geom_smooth() + ggtitle("Training on Player B")
ggplot(ctable[ctable$generation <100],aes(x=generation,y=fitness)) + geom_smooth() + ggtitle("Training on Player B")
ggplot(ctable[ctable$generation <1000],aes(x=generation,y=fitness)) + geom_smooth() + ggtitle("Training on Player B")
ggplot(ctable[ctable$generation <1000],aes(x=generation,y=distance)) + geom_smooth() + ggtitle("Training on Player B")
ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <1000],aes(x=generation,y=distance)) + geom_smooth() + ggtitle("Training on Player B")
ggplot(ctable[ctable$generation <1000],aes(x=generation,y=distance)) + geom_smooth() + ggtitle("Training on Player B")
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=distance)) + geom_smooth() + ggtitle("Training on Player B")
hexbinplot(distance~generation, data=ctable[ctable$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,150), ylim =c(-0.5,1.5), aspect=1, main="blabla")
hexbinplot(distance~generation, data=ctable[ctable$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,150), ylim =c(-5,1.270), aspect=1, main="blabla")
hexbinplot(distance~generation, data=ctable[ctable$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,150), ylim =c(-5,270), aspect=1, main="blabla")
hexbinplot(distance~generation, data=ctable[ctable$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,1010), ylim =c(-5,270), aspect=1, main="blabla")
hexbinplot(distance~generation, data=ctable[ctable$generation <2000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla")
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point()
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation))
View(gamalyzer.cpf12.sw10.gen7410)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(alpha=generation))
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(alpha=factor(generation)))
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(alpha=-generation))
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(alpha=factor(generation)))
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=factor(generation)))
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=factor(levels = 10, generation)))
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=factor(levels = 10, x = generation)))
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth()
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth(method = "lm")
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth(method = "lm", se = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth(span = 0.1, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth(span = 0.3, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth(method="loess",span = 0.3, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth(span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth(method="gam", formula=distance~fitness,span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color=generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(alpha=generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(density=generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=generation,color = generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=generation,color = generation,alpha=generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=(2000-generation),color = generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=-generation,color = generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=factor(generation),color = generation)) + geom_smooth(method="gam",span = 0.9, SE = TRUE)
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(color = generation)) + geom_smooth(method="lm")
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=10,color = generation)) + geom_smooth(method="lm")
ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=10,color = generation))
ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=distance, fitness)) + geom_point(aes(size=10,color = generation))
ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation))
ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) geom_smooth()
ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth()
ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black")
plot_baseline <- ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black")
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black")
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = fitness)) + geom_smooth(colour="black")
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = distance)) + geom_smooth(colour="black")
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black")
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black",size=1-)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black",size=10)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black",size=2)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black",size=1)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black",size=1, SE = T)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(x= generation, y = distance, colour="black",size=1, SE = T)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(x= generation, colour="black",size=1, SE = T)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1, SE = T)
plot_gama <- ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1, SE = T)
plot_baseline <- ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth(colour="black", size=1)
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_gama <- ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1, SE = T) +ggtitle("Player Based")
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1, SE = T) +ggtitle("Player Based") +guides(fill=FALSE)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance), guides=NULL) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1, SE = T) +ggtitle("Player Based") +guides(fill=FALSE)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance), guides=FLASE) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1, SE = T) +ggtitle("Player Based") +guides(fill=FALSE)
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance), guides=FLASE) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1, SE = T) +ggtitle("Player Based") + opts(legend.position = "none")
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based") + theme(legend.position="none")
ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none")
plot_gama <- ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none")
plot_baseline <- ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Baseline Evolution") + theme(legend.position="none")
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_gama <- ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <1000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none")
plot_baseline <- ggplot(data=ctable[ctable$generation <1000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Baseline Evolution") + theme(legend.position="none")
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_gama <- ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none")
plot_baseline <- ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Baseline Evolution") + theme(legend.position="none")
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_gama <- ggplot(data=ctable_cpf12_sw10_gen7410_s1p2_mult[ctable_cpf12_sw10_gen7410_s1p2_mult$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none")
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_baseline <- ggplot(data=ctable[ctable$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Baseline Evolution") + theme(legend.position="none")
plot_gama <- ggplot(data=ctable_cpf12_sw10_gen7410_s1p2_mult[ctable_cpf12_sw10_gen7410_s1p2_mult$generation <100][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none")
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_baseline <- ggplot(data=ctable[ctable$generation <200][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Baseline Evolution") + theme(legend.position="none")
plot_gama <- ggplot(data=ctable_cpf12_sw10_gen7410_s1p2_mult[ctable_cpf12_sw10_gen7410_s1p2_mult$generation <200][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none")
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_gama <- ggplot(data=ctable_cpf12_sw10_gen7410_s1p2_mult[ctable_cpf12_sw10_gen7410_s1p2_mult$generation <200][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none") +coord_cartesian(ylim=c(0,270))
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_baseline <- ggplot(data=ctable[ctable$generation <200][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Baseline Evolution") + theme(legend.position="none") + coord_cartesian(ylim=c(0,270))
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_gama <- ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <200][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none") +coord_cartesian(ylim=c(0,270))
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_baseline <- ggplot(data=ctable[ctable$generation <500][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Baseline Evolution") + theme(legend.position="none") + coord_cartesian(ylim=c(0,270))
plot_gama <- ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <500][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none") +coord_cartesian(ylim=c(0,270))
grid.arrange(ncol=2, plot_baseline,plot_gama)
plot_baseline <- ggplot(data=ctable[ctable$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Baseline Evolution") + theme(legend.position="none") + coord_cartesian(ylim=c(0,270))
plot_gama <- ggplot(data=ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000][level == 0], xlim =c(-5,2010), ylim =c(-5,270), aspect=1, main="blabla", aes(x=generation, distance)) + geom_point(aes(size=10,color = generation)) + geom_smooth( colour="black",size=1) +ggtitle("Player Based Evolution") + theme(legend.position="none") +coord_cartesian(ylim=c(0,270))
grid.arrange(ncol=2, plot_baseline,plot_gama)
save.image("D:/Projects/platformerAI/dataset/GECCO-data/baseline-gen500.RData")
load("D:/Projects/platformerAI/dataset/GECCO-data/workingset-gamamultadd.RData")
View(ctable)
for (i in seq(1,nrow(ctable),1)){
ctable$xc
}
ctable$similarity[1]
ctable$similarity[2]
for (i in seq(1,nrow(ctable),1)){
ctable$similarity[i] <- 1-ctable$similarity[i]
}
load("D:/Projects/platformerAI/dataset/GECCO-data/workingset-gamamultadd.RData")
ctable.s1.player4.add_distance <- ctable
ct <- lapply(ctable.s1.player2.add_distance$similarity, function(x) {x <- 1.0-x}))
ct <- lapply(ctable.s1.player2.add_distance$similarity, function(x) {x <- 1.0-x})
ct[1]
ctable$similarity <- lapply(ctable.s1.player2.add_distance$similarity, function(x) {x <- 1.0-x})
ctable$similarity <- as.vector(lapply(ctable.s1.player2.add_distance$similarity, function(x) {x <- 1.0-x}))
ctable$similarity <- c(lapply(ctable.s1.player2.add_distance$similarity, function(x) {x <- 1.0-x}))
ctable$similarity <- data.frame(lapply(ctable.s1.player2.add_distance$similarity, function(x) {x <- 1.0-x}))
ctable$similarity <- sapply(ctable.s1.player2.add_distance$similarity, function(x) {x <- 1.0-x})
View(ctable)
load("D:/Projects/platformerAI/dataset/GECCO-data/workingset-gamamultadd.RData")
ctable$similarity <- sapply(ctable.s1.player4.add_distance$similarity, function(x) {x <- 1.0-x})
View(ctable)
ctable.s1.player4.add_distance <- ctable
ctable.s1.player2.add_distance$similarity <- sapply(ctable.s1.player2.add_distance$similarity, function(x) {x <- 1.0-x})
simgens1p2 <- ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player A")
simgens1p4 <- ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B")
grid.arrange(ncol = 2, simgens1p2, simgens1p4)
simgens1p2 <- ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player A") +coord_cartesian(ylim = (0.7,0.95))
simgens1p2 <- ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player A") +coord_fixed(ylim = (0.7,0.95))
simgens1p2 <- ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() +coord_fixed(ylim = (0.7,0.95)) + ggtitle("Training on Player A")
simgens1p2 <- ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() +coord_fixed(ylim = c(0.7,0.95)) + ggtitle("Training on Player A")
simgens1p4 <- ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ylim = c(0.7,0.95))
grid.arrange(ncol = 2, simgens1p2, simgens1p4)
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ylim = c(0.7,0.95))
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(aspect = 1,ylim = c(0.7,0.95))
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ratio = 1,ylim = c(0.7,0.95))
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ratio = 0.1,ylim = c(0.7,0.95))
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ylim = c(0,0.95))
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ylim = c(10,0.95))
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ylim = c(10,2.95))
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ylim = c(0,2.95))
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ratio = 1/4000)
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ratio = 4000)
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ratio = 8000)
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ratio = 10000)
ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ratio = 100000)
simgens1p4 <- ggplot(ctable[ctable$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player B") +coord_fixed(ratio = 100000)
simgens1p2 <- ggplot(ctable[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player A") +coord_fixed(ratio = 100000)
grid.arrange(ncol = 2, simgens1p2, simgens1p4)
simgens1p2 <- ggplot(ctable.s1.player2.add_distance[ctable.s1.player2.add_distance$generation <2000],aes(x=generation,y=similarity)) + geom_smooth() + ggtitle("Training on Player A") +coord_fixed(ratio = 100000)
grid.arrange(ncol = 2, simgens1p2, simgens1p4)
hexbinplot(distance~fitness, data=ctable[ctable$generation <50], colramp=rf, trans=log, inv=exp, xlim =c(-10,300), ylim =c(-10,350))
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1)
hexbinplot(fitness~distance, data=ctable[ctable$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-5,20), ylim =c(-5,20))
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1)
ggplot(ctable[ctable$generation <50],aes(x=distance,y=fitness)) + geom_hex() + xlab("Distance") + ylab("Fitness") + scale_fill_gradientn(colours=my_palette) + coord_fixed(xlim =c(-10,300), ylim =c(-10,350))
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1)
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations")
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = NULL)
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <50][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,40), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
5
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,50), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,60), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hex1 <- hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,60), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hex1 <- hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <10][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,50), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hex2 <- hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hex3 <- hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="50 Generations",colorkey = FALSE)
hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="10 Generations",colorkey = FALSE)
hex2 <- hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="100 Generations",colorkey = FALSE)
hex3 <- hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="1000 Generations",colorkey = FALSE)
grid.arrange(ncol = 3, hex1, hex2, hex3)
hex1 <- hexbinplot(similarity~distance, data=ctable[ctable$generation <500][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="10 Generations",colorkey = FALSE)
hex2 <- hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <100][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="100 Generations",colorkey = FALSE)
hex3 <- hexbinplot(similarity~distance, data=ctable.s1.player4.add_distance[ctable.s1.player4.add_distance$generation <1000][level == 0], colramp=rf, trans=log, inv=exp, xlim =c(-10,270), ylim =c(-0.5,1.5),aspect=1,main="1000 Generations",colorkey = FALSE)
grid.arrange(ncol = 3, hex1, hex2, hex3)
save.image("D:/Projects/platformerAI/dataset/GECCO-data/last_fixes.RData")
